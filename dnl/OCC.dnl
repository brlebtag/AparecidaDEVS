//-----------------------------------------------!
//			Messages typedef!
//---------!
accepts input on CarCrash with type CarCrash!
accepts input on ManualCarCrash with type ManualCarCrash!
accepts input on CarCrashResolvedOCC with type CarCrashResolvedOCC!

//-----------------------------------------------!
//			Variables!
//---------!
use carCrashParam with type CarCrash!
use carCrashResolvedParam with type CarCrashResolved!

//-----------------------------------------------!
//			Wait For Command!
//---------!
to start passivate in ReadyState!
when in ReadyState and receive CarCrash go to ReadyState!
when in ReadyState and receive ManualCarCrash go to SendCarCrashState!
when in ReadyState and receive CarCrashResolvedOCC go to SendCarCrashResolvedState!
when in ReadyState and receive Consumption go to ReadyState!
when in ReadyState and receive LightChangedState go to ReadyState!
external event for ReadyState with CarCrash
<%
carCrashParam = (CarCrash) messageList.get(0).getData();
output(carCrashParam.getValue());
System.out.println("----------------------- OCC Received CarCrash ------------------------");
%>!
external event for ReadyState with ManualCarCrash
<%
ManualCarCrash manual = (ManualCarCrash) messageList.get(0).getData();
carCrashParam = new CarCrash(manual.getValue());
output(carCrashParam.getValue());
System.out.println("----------------------- OCC Received ManualCarCrash ------------------------");
%>!
external event for ReadyState with CarCrashResolvedOCC
<%
CarCrashResolvedOCC carCrashResolved = (CarCrashResolvedOCC) messageList.get(0).getData();
carCrashResolvedParam = new CarCrashResolved(carCrashResolved.getValue());
output(carCrashResolvedParam.getValue());
System.out.println("----------------------- OCC Received CarCrashResolvedOCC ------------------------");
%>!
external event for ReadyState with LightChangedState
<%
LightChangedState event = (LightChangedState) messageList.get(0).getData();
output(event.getValue());
%>!
external event for ReadyState with Consumption
<%
Consumption event = (Consumption) messageList.get(0).getData();
output(event.getValue());
%>!

//-----------------------------------------------!
//			SendCarCrash!
//---------!
hold in SendCarCrashState for time 1!
after SendCarCrashState output CarCrash!
from SendCarCrashState go to ReadyState!
output event for SendCarCrashState
<%
output.add(outCarCrash, carCrashParam);
System.out.println("----------------------- OCC Sent CarCrash ------------------------");
%>!

//-----------------------------------------------!
//			CarCrashResolved!
//---------!
hold in SendCarCrashResolvedState for time 1!
after SendCarCrashResolvedState output CarCrashResolved!
from SendCarCrashResolvedState go to ReadyState!
output event for SendCarCrashResolvedState
<%
output.add(outCarCrashResolved, carCrashResolvedParam);
System.out.println("----------------------- OCC Sent CarCrash ------------------------");
%>!

//-----------------------------------------------!
//			Extra code!
//---------!
add additional code
<%
protected void output(String value) {
	try {
		java.io.BufferedWriter writer = new java.io.BufferedWriter(new java.io.FileWriter("/home/brlebtag/Documentos/Mestrado/AparecidaDEVS/OCC.out.csv", true));
		writer.write(value + "\n");
		writer.close();
	} catch (Exception e) {
		e.printStackTrace();
	}
}

%>!